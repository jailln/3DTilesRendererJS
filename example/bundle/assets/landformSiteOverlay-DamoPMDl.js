import{j as S,k as L,Q as F,ah as P,ai as E,S as J,W as k,a as j,G as I,ac as q}from"./three.module-llkpyLgW.js";import{g as U}from"./lil-gui.module.min-DGepGIYL.js";import{P as Y,T as D}from"./TilesRenderer-COIzxhkT.js";import{E as Q}from"./EnvironmentControls-lFV-KO1M.js";import"./B3DMLoader-BbySC5wb.js";import"./readMagicBytes-C5ZyfJzm.js";import"./LoaderBase-QLlipkOW.js";import"./GLTFLoader-KDqsLDsn.js";import"./PNTSLoader-e5Dx7bf2.js";import"./I3DMLoader-DX535fGk.js";import"./CMPTLoader-BdZwSK3N.js";import"./GLTFExtensionLoader-bnHC9qPo.js";const C=new S,w=new F,y=new S;function R(i,e){if(i.sceneMatrix)return;const{translation:t,rotation:s,scale:r}=i;if(C.set(t.x,t.y,t.z),w.set(s.x,s.y,s.z,s.w),y.set(r.x,r.y,r.z),i.matrix=new L().compose(C,w,y),i.sceneMatrix=new L().copy(i.matrix),i.parent_id!==""){const a=e.find(n=>n.id===i.parent_id);R(a,e),i.sceneMatrix.premultiply(a.sceneMatrix)}}class V{constructor(){this.fetchOptions={}}loadAsync(e){return fetch(e,this.fetchOptions).then(t=>t.json()).then(t=>this.parse(t))}parse(e){return e.frames.forEach(t=>R(t,e.frames)),e}}const B=i=>class extends i{constructor(...e){super(...e),this.textures=[],this.displayAsOverlay=!1}onBeforeCompile(e){const t=this.textures,s=this;e.uniforms.textures={get value(){return s.textures}},e.defines={DISPLAY_AS_OVERLAY:Number(this.displayAsOverlay)},t.length!==0&&(e.fragmentShader=e.fragmentShader.replace(/void main/,r=>`
					uniform sampler2D textures[ ${t.length} ];
					${r}

				`).replace(/#include <color_fragment>/,r=>`

					${r}

					vec4 col;
					#pragma unroll_loop_start
					for ( int i = 0; i < ${t.length}; i ++ ) {

						col = texture( textures[ i ], vMapUv );

						#if DISPLAY_AS_OVERLAY

						diffuseColor = mix( diffuseColor, vec4( 0.22, 0.73, 0.82, 1 ), col.r * 0.5 );

						#else

						diffuseColor = mix( diffuseColor, col, col.a );

						#endif

					}
					#pragma unroll_loop_end

				`))}customProgramCacheKey(){return String(this.displayAsOverlay)+String(this.textures.length)+this.onBeforeCompile.toString()}};function W(){let i=!1,e=!1,t=-1;return typeof navigator<"u"&&(i=/^((?!chrome|android).)*safari/i.test(navigator.userAgent)===!0,e=navigator.userAgent.indexOf("Firefox")>-1,t=e?navigator.userAgent.match(/Firefox\/([0-9]+)\./)[1]:-1),!(typeof createImageBitmap>"u"||i||e&&t<98)}class z{constructor(e,t){this.cache={},this.fetchOptions={},this.loadTextureCallback=e,this.queue=t}getTextureLoader(){const e=this.fetchOptions;let t;return W()?t=new P:t=new E,e.credentials==="include"&&e.mode==="cors"&&t.setCrossOrigin("use-credentials"),"credentials"in e&&t.setWithCredentials(e.credentials==="include"),e.headers&&t.setRequestHeader(e.headers),t}loadTexture(e){const t=this.cache;if(e in t)return t[e].promise;const s=new AbortController,r=this.queue.add(e,()=>this.loadTextureCallback(e)).then(a=>{if(s.signal.aborted)throw new Error("TextureCache: Texture load aborted.");return t[e].texture=a,a});return this.cache[e]={texture:null,abortController:s,promise:r},r}getTexture(e){const t=this.cache;return e in t?t[e].texture:null}deleteTexture(e){const t=this.cache;if(e in t){const s=t[e];s.refs--,s.refs===0&&(s.texture?s.texture.dispose():s.abortController&&(s.abortController.abort(),this.queue.remove(e)),delete this.cache[e])}}dispose(){const e=this.cache;for(const t in e){const s=e[t];s.texture?(s.texture.dispose(),s.texture.image instanceof ImageBitmap&&s.texture.image.close()):s.abortController&&s.abortController.abort()}}}class K{constructor(e){this.name="TEXTURE_OVERLAY_PLUGIN",this.caches=null,this.queue=null,this.tiles=null,this.assignCallback=e}init(e){this.tiles=e,this.caches={},this.queue=new Y,this.queue.priorityCallback=(t,s)=>e.downloadQueue.priorityCallback(t,s),this._disposeModelCallback=({tile:t})=>{const s=this.caches;for(const r in s)s[r].deleteTexture(this.getTileKey(t))},this._assignTexturesCallback=({tile:t,scene:s})=>{queueMicrotask(()=>this.assignCallback(s,t,this))},e.addEventListener("dispose-model",this._disposeModelCallback),e.addEventListener("load-model",this._assignTexturesCallback),e.addEventListener("layer-textures-change",this._assignTexturesCallback)}processTileModel(e,t){const s=this.caches,r=[];for(const a in s){const l=s[a].loadTexture(this.getTileKey(t)).catch(()=>{});r.push(l)}return Promise.all(r)}dispose(){const{caches:e,tiles:t}=this;Object.keys(e).forEach(s=>{this.unregisterLayer(s)}),t.removeEventListener("dispose-model",this._disposeModelCallback),t.removeEventListener("load-model",this._assignTexturesCallback),t.removeEventListener("layer-textures-change",this._assignTexturesCallback)}getTileKey(e){return e.content.uri}getTexturesForTile(e,t={}){const s=this.getTileKey(e),r=this.caches;for(const a in t)a in r||delete t[a];for(const a in r)t[a]=r[a].getTexture(s);return t}hasLayer(e){return e in this.caches}registerLayer(e,t){if(e in this.caches)throw new Error(`TextureOverlayPlugin: Texture overlay named ${e} already exists.`);const s=this.tiles,r=new z(t,this.queue);r.fetchOptions=s.fetchOptions,this.caches[e]=r,s.forEachLoadedModel((a,n)=>{r.loadTexture(this.getTileKey(n)).then(()=>this.assignCallback(a,n,this)).catch(()=>{})})}unregisterLayer(e){const t=this.tiles,s=this.caches;if(e in s){const r=s[e];delete s[e],t.forEachLoadedModel((a,n)=>{r.getTexture(this.getTileKey(n))&&this.assignCallback(a,n,this)}),r.dispose()}}}const G=["NLF_0477_0709296508M723RAS_N0261004NCAM00701_0A0085J02/NLF_0477_0709296508M723RAS_N0261004NCAM00701_0A0085J02_scene.json","NLF_0477_0709296508M723RAS_N0261004NCAM00708_0A00LLJ02/NLF_0477_0709296508M723RAS_N0261004NCAM00708_0A00LLJ02_scene.json","NLF_0477_0709297328M366RAS_N0261004NCAM03477_0A0195J02/NLF_0477_0709297328M366RAS_N0261004NCAM03477_0A0195J02_scene.json","NLF_0477_0709297503M102RAS_N0261004NCAM03477_0A0195J02/NLF_0477_0709297503M102RAS_N0261004NCAM03477_0A0195J02_scene.json","NLF_0477_0709297668M065RAS_N0261004NCAM03477_0A0195J02/NLF_0477_0709297668M065RAS_N0261004NCAM03477_0A0195J02_scene.json","NLF_0477_0709297838M897RAS_N0261004NCAM02477_0A0195J02/NLF_0477_0709297838M897RAS_N0261004NCAM02477_0A0195J02_scene.json","NLF_0477_0709298005M099RAS_N0261004NCAM02477_0A0195J02/NLF_0477_0709298005M099RAS_N0261004NCAM02477_0A0195J02_scene.json","NLF_0477_0709298187M680RAS_N0261004NCAM13477_0A0195J02/NLF_0477_0709298187M680RAS_N0261004NCAM13477_0A0195J02_scene.json","NLF_0477_0709298299M678RAS_N0261004NCAM13477_0A0195J02/NLF_0477_0709298299M678RAS_N0261004NCAM13477_0A0195J02_scene.json","NLF_0477_0709298393M010RAS_N0261004NCAM13477_0A0195J02/NLF_0477_0709298393M010RAS_N0261004NCAM13477_0A0195J02_scene.json"].map(i=>"https://raw.githubusercontent.com/NASA-AMMOS/3DTilesSampleData/master/m20-drive-1004/tilesets/"+i),A=[];let u,m,g,c;const x={errorTarget:12,slopeDisplay:"NONE"};$();v();function $(){g=new J,c=new k({antialias:!0}),c.setPixelRatio(window.devicePixelRatio),c.setSize(window.innerWidth,window.innerHeight),c.setClearColor(14208704),document.body.appendChild(c.domElement),c.domElement.tabIndex=1,u=new j(60,window.innerWidth/window.innerHeight,.025,4e3),u.position.set(-20,10,20),u.lookAt(0,0,0),m=new Q(g,u,c.domElement),m.adjustHeight=!1,m.minDistance=1,m.maxAltitude=Math.PI;const i=new I;i.rotation.set(Math.PI/2,0,0),g.add(i);let e=null,t=null,s=null;const r=async n=>{const l=n.replace("/tilesets/","/textures/SMG/").replace(/\.[0-9a-z]+$/i,".png");return new E().loadAsync(l).then(d=>(d.flipY=!1,d))};G.forEach(async n=>{const l=await new V().loadAsync(n),d=n.split(/[\\/]/g);d.pop();const N=B(q);l.tilesets.forEach(_=>{const b=[...d,`${_.id}_tileset.json`].join("/"),o=new D(b),O=new K((f,M,p)=>{f.traverse(h=>{h.material&&(h.material.textures=Object.values(p.getTexturesForTile(M)),h.material.displayAsOverlay=x.slopeDisplay==="OVERLAY",h.material.needsUpdate=!0)})});o.registerPlugin(O),o.addEventListener("load-model",({tile:f,scene:M})=>{M.traverse(p=>{if(p.material){const h=new N;h.copy(p.material),p.material=h}})}),s=s||o.lruCache,t=t||o.parseQueue,e=e||o.downloadQueue,o.lruCache=s,o.downloadQueue=e,o.parseQueue=t,o.setCamera(u),l.frames.find(f=>f.id===_.frame_id).sceneMatrix.decompose(o.group.position,o.group.quaternion,o.group.scale),i.add(o.group),A.push(o)})}),T(),window.addEventListener("resize",T,!1);const a=new U;a.add(x,"errorTarget",0,100),a.add(x,"slopeDisplay",["NONE","OVERLAY","SOLID"]).onChange(n=>{n!=="NONE"?A.forEach(l=>{const d=l.getPluginByName("TEXTURE_OVERLAY_PLUGIN");d.hasLayer("slopeLayer")||d.registerLayer("slopeLayer",r),l.forEachLoadedModel(N=>{N.traverse(_=>{_.material&&(_.material.displayAsOverlay=n==="OVERLAY",_.material.needsUpdate=!0)})})}):A.forEach(l=>{l.getPluginByName("TEXTURE_OVERLAY_PLUGIN").unregisterLayer("slopeLayer")})}),a.open()}function T(){u.aspect=window.innerWidth/window.innerHeight,u.updateProjectionMatrix(),c.setSize(window.innerWidth,window.innerHeight),c.setPixelRatio(window.devicePixelRatio)}function v(){requestAnimationFrame(v),m.update(),u.updateMatrixWorld(),A.forEach(i=>{i.errorTarget=x.errorTarget,i.setResolutionFromRenderer(u,c),i.update()}),c.render(g,u)}
