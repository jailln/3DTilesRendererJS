import{G as x,ak as N,M as F,f as V,d as I,C as P,j as U,al as W,p as z}from"./three.module-llkpyLgW.js";import{S as j,a as q}from"./EllipsoidRegionHelper-BOlAtfkY.js";import{O as J}from"./OrbitControls-RvIyFQIt.js";const E=Symbol("ORIGINAL_MATERIAL"),v=Symbol("HAS_RANDOM_COLOR"),k=Symbol("HAS_RANDOM_NODE_COLOR"),M=Symbol("LOAD_TIME"),A=new I,L=()=>{},G={};function w(_){if(!G[_]){const t=Math.random(),e=.5+Math.random()*.5,o=.375+Math.random()*.25;G[_]=new P().setHSL(t,e,o)}return G[_]}const C=0,Q=1,X=2,Y=3,Z=4,$=5,ee=6,H=7,R=8,te=9,B=10;class le{constructor(){this.name="DEBUG_TILES_PLUGIN",this.tiles=null,this.extremeDebugDepth=-1,this.extremeDebugError=-1,this.boxGroup=null,this.sphereGroup=null,this.regionGroup=null,this.displayBoxBounds=!1,this.displaySphereBounds=!1,this.displayRegionBounds=!1,this.colorMode=C,this.maxDebugDepth=-1,this.maxDebugDistance=-1,this.maxDebugError=-1,this.customColorCallback=null,this.getDebugColor=(t,e)=>{e.setRGB(t,t,t)}}init(t){this.tiles=t;const e=t.group;this.boxGroup=new x,this.boxGroup.name="DebugTilesRenderer.boxGroup",e.add(this.boxGroup),this.boxGroup.updateMatrixWorld(),this.sphereGroup=new x,this.sphereGroup.name="DebugTilesRenderer.sphereGroup",e.add(this.sphereGroup),this.sphereGroup.updateMatrixWorld(),this.regionGroup=new x,this.regionGroup.name="DebugTilesRenderer.regionGroup",e.add(this.regionGroup),this.regionGroup.updateMatrixWorld(),this._onLoadTileSetCB=()=>{this._initExtremes()},this._onLoadModelCB=({scene:o,tile:a})=>{this._onLoadModel(o,a)},this._onDisposeModelCB=({tile:o})=>{this._onDisposeModel(o)},this._onUpdateAfterCB=()=>{this._onUpdateAfter()},this._onTileVisibilityChangeCB=({scene:o,tile:a,visible:h})=>{this._onTileVisibilityChange(a,h)},t.addEventListener("load-tile-set",this._onLoadTileSetCB),t.addEventListener("load-model",this._onLoadModelCB),t.addEventListener("dispose-model",this._onDisposeModelCB),t.addEventListener("update-after",this._onUpdateAfterCB),t.addEventListener("tile-visibility-change",this._onTileVisibilityChangeCB),t.traverse(o=>{o.cached.scene&&this._onLoadModel(o.cached.scene,o)}),t.visibleTiles.forEach(o=>{this._onTileVisibilityChange(o,!0)})}getTileInformationFromActiveObject(t){let e=null;return this.tiles.activeTiles.forEach(a=>{if(e)return!0;const h=a.cached.scene;h&&h.traverse(n=>{n===t&&(e=a)})}),e?{distanceToCamera:e.__distanceFromCamera,geometricError:e.geometricError,screenSpaceError:e.__error,depth:e.__depth,isLeaf:e.__isLeaf}:null}_initExtremes(){let t=-1;this.tiles.traverse(o=>{t=Math.max(t,o.__depth)});let e=-1;this.tiles.traverse(o=>{e=Math.max(e,o.geometricError)}),this.extremeDebugDepth=t,this.extremeDebugError=e}_onUpdateAfter(){const t=this.tiles;if(!t.root)return;this.boxGroup.visible=this.displayBoxBounds,this.sphereGroup.visible=this.displaySphereBounds,this.regionGroup.visible=this.displayRegionBounds;let e=-1;this.maxDebugDepth===-1?e=this.extremeDebugDepth:e=this.maxDebugDepth;let o=-1;this.maxDebugError===-1?o=this.extremeDebugError:o=this.maxDebugError;let a=-1;this.maxDebugDistance===-1?(t.getBoundingSphere(A),a=A.radius):a=this.maxDebugDistance;const h=this.errorTarget,n=this.colorMode,d=t.visibleTiles;let s;n===B&&(s=Array.from(d).sort((i,u)=>i[M]-u[M])),d.forEach(i=>{const u=i.cached.scene;let b,f,g;n===H&&(b=Math.random(),f=.5+Math.random()*.5,g=.375+Math.random()*.25),u.traverse(r=>{n===R&&(b=Math.random(),f=.5+Math.random()*.5,g=.375+Math.random()*.25);const D=r.material;if(D){const y=r[E];if(n===C&&D!==y)r.material.dispose(),r.material=r[E];else if(n!==C&&D===y)if(r.isPoints){const l=new N;l.size=y.size,l.sizeAttenuation=y.sizeAttenuation,r.material=l}else r.material=new F,r.material.flatShading=!0;switch(n!==H&&delete r.material[v],n!==R&&delete r.material[k],n){case Z:{const l=i.__depth/e;this.getDebugColor(l,r.material.color);break}case $:{const l=i.__depthFromRenderedParent/e;this.getDebugColor(l,r.material.color);break}case Q:{const l=i.__error/h;l>1?r.material.color.setRGB(1,0,0):this.getDebugColor(l,r.material.color);break}case X:{const l=Math.min(i.geometricError/o,1);this.getDebugColor(l,r.material.color);break}case Y:{const l=Math.min(i.__distanceFromCamera/a,1);this.getDebugColor(l,r.material.color);break}case ee:{!i.children||i.children.length===0?this.getDebugColor(1,r.material.color):this.getDebugColor(0,r.material.color);break}case R:{r.material[k]||(r.material.color.setHSL(b,f,g),r.material[k]=!0);break}case H:{r.material[v]||(r.material.color.setHSL(b,f,g),r.material[v]=!0);break}case te:{this.customColorCallback?this.customColorCallback(i,r):console.warn("DebugTilesRenderer: customColorCallback not defined");break}case B:{const l=s.indexOf(i);this.getDebugColor(l/(s.length-1),r.material.color);break}}}})})}_onTileVisibilityChange(t,e){const o=t.cached,a=this.sphereGroup,h=this.boxGroup,n=this.regionGroup,d=o.boxHelperGroup,s=o.sphereHelper,i=o.regionHelper;e?(d&&(h.add(d),d.updateMatrixWorld(!0)),s&&(a.add(s),s.updateMatrixWorld(!0)),i&&(n.add(i),i.updateMatrixWorld(!0))):(d&&h.remove(d),s&&a.remove(s),i&&n.remove(i))}_onLoadModel(t,e){e[M]=performance.now();const o=this.tiles,a=e.cached,{sphere:h,obb:n,region:d}=a.boundingVolume;if(n){const s=new x;s.name="DebugTilesRenderer.boxHelperGroup",s.matrix.copy(n.transform),s.matrixAutoUpdate=!1;const i=new V(n.box,w(e.__depth));i.raycast=L,s.add(i),a.boxHelperGroup=s,o.visibleTiles.has(e)&&this.displayBoxBounds&&(this.boxGroup.add(s),s.updateMatrixWorld(!0))}if(h){const s=new j(h,w(e.__depth));s.raycast=L,a.sphereHelper=s,o.visibleTiles.has(e)&&this.displaySphereBounds&&(this.sphereGroup.add(s),s.updateMatrixWorld(!0))}if(d){const s=new q(d,w(e.__depth));s.raycast=L;const i=new I;d.getBoundingSphere(i),s.position.copy(i.center),i.center.multiplyScalar(-1),s.geometry.translate(...i.center),a.regionHelper=s,o.visibleTiles.has(e)&&this.displayRegionBounds&&(this.regionGroup.add(s),s.updateMatrixWorld(!0))}t.traverse(s=>{const i=s.material;i&&(s[E]=i)})}_onDisposeModel(t){const e=t.cached;e.boxHelperGroup&&(e.boxHelperGroup.children[0].geometry.dispose(),delete e.boxHelperGroup),e.sphereHelper&&(e.sphereHelper.geometry.dispose(),delete e.sphereHelper),e.regionHelper&&(e.regionHelper.geometry.dispose(),delete e.regionHelper)}dispose(){const t=this.tiles;t.removeEventListener("load-tile-set",this._onLoadTileSetCB),t.removeEventListener("load-model",this._onLoadModelCB),t.removeEventListener("dispose-model",this._onDisposeModelCB),t.removeEventListener("update-after",this._onUpdateAfterCB),this.colorMode=C,this._onUpdateAfter(),t.traverse(e=>{this._onDisposeModel(e)}),this.boxGroup.removeFromParent(),this.sphereGroup.removeFromParent(),this.regionGroup.removeFromParent()}}const se={type:"fly-change"},ie={type:"fly-start"},re={type:"fly-end"},p=new W(0,0,0,0);class he extends J{constructor(t,e){const o=c=>{this.enabled&&Object.defineProperty(c,"shiftKey",{get(){return!1}})};e.addEventListener("pointerdown",o),super(t,e),this.enableKeys=!1,this.enableFlight=!0,this.baseSpeed=1,this.fastSpeed=4,this.forwardKey="w",this.backKey="s",this.leftKey="a",this.rightKey="d",this.upKey="q",this.downKey="e",this.fastKey="shift";let a=!1,h=!1,n=!1,d=!1,s=!1,i=!1,u=!1,b=0,f=0,g=0,r=-1;const D=new U,y=new z,l=()=>{if(r!==-1){cancelAnimationFrame(r),r=-1,this.minDistance=f,this.maxDistance=g;const c=Math.min(b,t.position.distanceTo(D));p.set(0,0,-1,0).applyMatrix4(t.matrixWorld),this.target.copy(t.position).addScaledVector(p,c),this.dispatchEvent(re)}},S=()=>{if(!this.enabled||!this.enableFlight)return;r=requestAnimationFrame(S),p.set(0,0,0,0),h&&(p.z-=1),n&&(p.z+=1),d&&(p.x-=1),s&&(p.x+=1),i&&(p.y+=1),u&&(p.y-=1),p.applyMatrix4(t.matrixWorld);const c=60*y.getDelta(),m=a?this.fastSpeed:this.baseSpeed;t.position.addScaledVector(p,m*c),this.target.addScaledVector(p,m*c),this.dispatchEvent(se)},T=c=>{const m=c.key.toLowerCase();switch(r===-1&&(g=this.maxDistance,f=this.minDistance,b=t.position.distanceTo(this.target),D.copy(this.target)),m){case this.forwardKey:h=!0;break;case this.backKey:n=!0;break;case this.leftKey:d=!0;break;case this.rightKey:s=!0;break;case this.upKey:i=!0;break;case this.downKey:u=!0;break;case this.fastKey:a=!0;break}switch(m){case this.fastKey:case this.forwardKey:case this.backKey:case this.leftKey:case this.rightKey:case this.upKey:case this.downKey:c.stopPropagation(),c.preventDefault()}(h||n||d||s||i||u||a)&&(this.minDistance=.01,this.maxDistance=.01,p.set(0,0,-1,0).applyMatrix4(t.matrixWorld),this.target.copy(t.position).addScaledVector(p,.01),r===-1&&(this.dispatchEvent(ie),y.getDelta(),S()))},K=c=>{const m=c.key.toLowerCase();switch(m){case this.fastKey:case this.forwardKey:case this.backKey:case this.leftKey:case this.rightKey:case this.upKey:case this.downKey:c.stopPropagation(),c.preventDefault()}switch(m){case this.forwardKey:h=!1;break;case this.backKey:n=!1;break;case this.leftKey:d=!1;break;case this.rightKey:s=!1;break;case this.upKey:i=!1;break;case this.downKey:u=!1;break;case this.fastKey:a=!1;break}h||n||d||s||i||u||a||l()},O=()=>{l()};this.blurCallback=O,this.keyDownCallback=T,this.keyUpCallback=K,this.disableShiftKeyCallback=o,this.domElement.addEventListener("blur",O),this.domElement.addEventListener("keydown",T),this.domElement.addEventListener("keyup",K)}dispose(){super.dispose(),this.domElement.removeEventListener("blur",this.blurCallback),this.domElement.removeEventListener("keydown",this.keyDownCallback),this.domElement.removeEventListener("keyup",this.keyUpCallback),this.domElement.removeEventListener("pointerdown",this.disableShiftKeyCallback)}}export{te as C,Y as D,he as F,X as G,ee as I,B as L,C as N,$ as R,Q as S,Z as a,H as b,R as c,le as d};
